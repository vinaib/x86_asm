TIP:
On shell: "echo $?" prints the return status of the last executed program

Unconditional branching:
-------------------------
JMP:
# compare to goto in c
# syntax: JMP Label
# 3 types of jumps
short	- +/- 128 bytes
near	- between short and far
far		- between different segments	


CALL:
# just like calling function in c
# syntax: call location
# there is an associated "RET" statement with every call
# using call pushes the next instruction address on to the stack
# this instruction is popped back into EIP on hitting the RET instruction

Conditional branching:
----------------------
Jxx:
JA	- Jump Above
JAE	- Jump Above if Equal
JE	- Jump Equal
JG	- Jump Greater
JZ	- Jump if Zero flag is set
JNZ	- Jump if Zero flag is not set
etc

# Dictated by the state of the  EFLAGS. In order to use conditional jumps you
  must have an operation which sets the EFLAGS register appropriately
# In conditional jumps, only short and near jumps are supported. Far jumps are
  not supported.
# EFLAGS (ZeroF, ParityF, OverflowF, SignF, CarryF)

LOOP Instruction
----------------
# used to loop through a set of instructions a predetermined number of times
# number is stored in ECX. Loop automatically decrements ECS after every run
# usage:
movl $10, %ecx
loopthis: 
	movl $1,%eax
	LOOP loopthis

LOOPZ - loop until ECX is not zero or the zero flag (ZF) is not set
LOOPNZ - loop until ECX is not zero or the zero flag (ZF) is set
