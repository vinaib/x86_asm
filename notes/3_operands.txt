3 Types of operands
-------------------

1) register operands :
=======================
Refer 2_registers.txt

2) Memory operands: 
===================
[ number ]						; displacement only [750]
[ reg ]							; base register only [rbp]
[ reg + reg*scale]				; base + index * scale, scale is 1,2,4,8 only 
								; [rcx + rsi*4] scale is 4
								; [rbp + rdx] scale is one
[ reg + number ]				; displacement is -8, [rbx -8]
[ reg + reg *scale + number] 	; all four components

3) Immediate operands:
======================
200			; decimal
0200		; decimal, leading 0 doesnot make it octal
0200d		; explicitly decimal - d suffix
0d200		; decimal - 0d prefix
0c8h		; hex - h suffx, but leading 0 is reuqired because c8h looks like a
			; var
0xc8		; hex - classic 0x prefix
0hc8		; hex - for some reaosn NASM likes 0h
310q		; octal - q suffix
0q310		; octal - 0q prefix
11001000b	; binary - b suffix
0b1110_1000	; binary - 0b prefix, underscores are allowed

Note: Instructions with two memory operands are extremely rare, Most of the
basic instruction have only the following forms

add reg, reg
add reg, mem
add reg, imm
add mem, reg
add mem, imm
